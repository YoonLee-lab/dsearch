#!/usr/bin/env bash

tmp=$(mktemp)
URL="https://en.wikipedia.org/w/api.php?action=opensearch&search=$(echo "$1" | sed 's/ /_/')&namespace=0&format=json"

build() {
	count=$(jshon -F $tmp -e 1 -a -u | wc -l)
	for i in `seq 1 $count`; do
		jshon -F $tmp -e 1 -e $i -uppe 3 -e $i -u
	done
}

chunk() {
	while {
		read -r title
		read -r url
	} do
		printf '%s :: %s\n' "$title" "$url"
	done
}

get_snippet() {
	curl -s "https://en.wikipedia.org/w/api.php?action=opensearch&search=$1&format=json" | jshon -e 2 -e 0 -u
 }

get_links() {
		curl -s "https://en.wikipedia.org/w/api.php?action=query&titles=$1&prop=extlinks&ellimit=500&format=json&redirects=1" | jshon -e query -e pages -a -e extlinks -a -e "*" -u
}

curl -sf "$URL" -o "$tmp" || exit 1
count=$(jshon -F $tmp -e 1 -a -u | wc -l)

# Check if we need to disambiguate
if [[ $count -gt 1 ]]; then
	result="$(build | chunk | dmenu -p "Select disambiguation: ")"
else
	result="$(jshon -F $tmp -e 1 -a -uppe 3 -a -u | chunk)"
fi

# Exit if we have nothing
if [[ -e $result ]]; then
	exit 0
fi

# Pipe to less instead here

result="${result##*wikipedia.org/wiki/}"
st -e varless "$(printf '%s\n\n%s\n' "$(get_snippet "$result")" "$(get_links "$result")")"
rm -rf "$tmp"
